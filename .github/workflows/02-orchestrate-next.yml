name: 02 Orchestrate Next (CP)

on:
  workflow_dispatch: {}
  schedule:
    - cron: '*/30 * * * *'  # 30分ごとに空きがあれば次へ

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  pick-and-instruct:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Pick next cp issue
        id: pick
        uses: actions/github-script@v7
        with:
          script: |
            const { data } = await github.rest.search.issuesAndPullRequests({
              q: `repo:${context.repo.owner}/${context.repo.repo} is:issue is:open label:cp:in-scope -label:in-progress`
            });
            // cp:n の小さい順に並べ替え
            const items = data.items.map(it => ({
              num: it.number,
              cp: (it.labels||[]).map(l=>l.name).filter(n=>n.startsWith('cp:'))[0]
            })).filter(x => !!x.cp).sort((a,b)=>parseInt(a.cp.split(':')[1])-parseInt(b.cp.split(':')[1]));
            if (!items.length) { core.setOutput('issue',''); return; }
            const issue = items[0].num;
            await github.rest.issues.addLabels({
              owner: context.repo.owner, repo: context.repo.repo, issue_number: issue, labels: ['in-progress']
            });
            core.setOutput('issue', String(issue));

      - name: Ask Claude to implement
        if: steps.pick.outputs.issue != ''
        uses: actions/github-script@v7
        with:
          script: |
            const issue = Number('${{ steps.pick.outputs.issue }}');
            const body = `@claude

Please implement this issue on a new branch:

- Branch: \`ai/cp-${issue}\`
- Follow \`CLAUDE.md\`.
- Include unit tests.
- Open a PR linking this issue.`;
            await github.rest.issues.createComment({
              owner: context.repo.owner, repo: context.repo.repo, issue_number: issue, body
            });
