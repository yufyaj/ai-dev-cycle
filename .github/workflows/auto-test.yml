name: Auto Test

on:
  workflow_dispatch:
    inputs:
      issue_number:
        description: 'Issue番号'
        required: true
        type: string
      branch_name:
        description: 'ブランチ名'
        required: true
        type: string

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  CLAUDE_CODE_OAUTH_TOKEN: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    permissions:
      issues: write
      contents: write
      pull-requests: write
      actions: write
      checks: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch_name }}
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Git
        run: |
          git config user.name "Claude AI Agent"
          git config user.email "claude-agent@anthropic.com"

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: |
          pip install PyGithub requests pytest pytest-cov

          # Node.js プロジェクトの場合
          if [ -f package.json ]; then
            npm ci
          fi

      - name: Update issue status
        env:
          ISSUE_NUMBER: ${{ github.event.inputs.issue_number }}
        run: |
          gh issue comment "${ISSUE_NUMBER}" --body "🧪 **テストを実行中**

          実行項目:
          - ✅ ユニットテスト
          - ✅ 統合テスト
          - ✅ カバレッジ測定
          - ✅ 正常系・異常系のテスト"

      - name: Run all tests
        id: run-tests
        continue-on-error: true
        run: |
          echo "🧪 テストを実行します..."
          python3 scripts/run_all_tests.py

          # テスト結果を確認
          if [ $? -eq 0 ]; then
            echo "test_passed=true" >> $GITHUB_OUTPUT
            echo "✅ すべてのテストに成功しました"
          else
            echo "test_passed=false" >> $GITHUB_OUTPUT
            echo "❌ テストに失敗しました"
          fi

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-${{ github.event.inputs.issue_number }}
          path: |
            **/test-results/
            **/coverage/
            **/htmlcov/
            **/.coverage
          retention-days: 7

      - name: Fix test failures with Claude
        if: steps.run-tests.outputs.test_passed == 'false'
        uses: anthropics/claude-code-action@beta
        with:
          # OAuth token使用（MAX契約）
          claude_code_oauth_token: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}
          github_token: ${{ secrets.GITHUB_TOKEN }}

          # agentモード（workflow_dispatch対応）
          mode: 'agent'

          # direct_promptで自動修正（@claude不要）
          direct_prompt: |
            テストが失敗しました。エラーを修正してください。

            Issue #${{ github.event.inputs.issue_number }}
            ブランチ: ${{ github.event.inputs.branch_name }}

            以下の手順で修正を実施してください：
            1. out/test_results.log ファイルからテストエラーログを確認
            2. エラーの原因を特定
            3. CLAUDE.mdのルールに従って修正コードを生成
            4. TDD原則に基づいて修正（テストが通るように実装を修正）
            5. 修正したファイルを保存

            修正が完了したら、変更内容をコミットしてください：
            - git add .
            - git commit -m "fix: テスト失敗の自動修正

            🤖 AI によるテスト修正
            Issue #${{ github.event.inputs.issue_number }}

            Co-authored-by: Claude AI <claude-agent@anthropic.com>"
            - git push

      - name: Check fix status
        if: steps.run-tests.outputs.test_passed == 'false'
        run: |
          # 修正がコミットされたか確認
          if [ -n "$(git status --porcelain)" ]; then
            echo "⚠️ 未コミットの変更があります"
            git add .
            git commit -m "fix: テスト失敗の追加修正

            🤖 AI によるテスト修正
            Issue #${{ github.event.inputs.issue_number }}

            Co-authored-by: Claude AI <claude-agent@anthropic.com>"
            git push
            echo "✅ 追加修正をコミットしました"
          else
            echo "✅ 修正が完了しています"
          fi

      - name: Retry tests after fix
        if: steps.run-tests.outputs.test_passed == 'false'
        id: retry-tests
        run: |
          echo "🔄 テストを再実行します..."
          python3 scripts/run_all_tests.py

          if [ $? -eq 0 ]; then
            echo "retry_passed=true" >> $GITHUB_OUTPUT
            echo "✅ 修正後のテストに成功しました"
          else
            echo "retry_passed=false" >> $GITHUB_OUTPUT
            echo "❌ 修正後もテストに失敗しました"
          fi

      - name: Generate test report
        if: always()
        run: |
          mkdir -p out/reports
          python3 << 'EOF'
          import json
          import os

          # テスト結果のサマリーを作成
          report = {
            "issue_number": os.environ.get('ISSUE_NUMBER'),
            "branch": os.environ.get('BRANCH_NAME'),
            "initial_test": os.environ.get('test_passed', 'false'),
            "retry_test": os.environ.get('retry_passed', 'N/A'),
            "timestamp": os.popen('date -Iseconds').read().strip()
          }

          with open('out/reports/test_report.json', 'w') as f:
            json.dump(report, f, indent=2)

          print("📊 テストレポートを生成しました")
          EOF
        env:
          ISSUE_NUMBER: ${{ github.event.inputs.issue_number }}
          BRANCH_NAME: ${{ github.event.inputs.branch_name }}
          test_passed: ${{ steps.run-tests.outputs.test_passed }}
          retry_passed: ${{ steps.retry-tests.outputs.retry_passed }}

      - name: Trigger review workflow
        if: steps.run-tests.outputs.test_passed == 'true' || steps.retry-tests.outputs.retry_passed == 'true'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const issueNumber = '${{ github.event.inputs.issue_number }}';
            const branchName = '${{ github.event.inputs.branch_name }}';

            console.log(`📝 レビューワークフローを起動します...`);

            await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'auto-review.yml',
              ref: 'main',
              inputs: {
                issue_number: issueNumber,
                branch_name: branchName
              }
            });

            console.log(`✅ レビューワークフローを起動しました`);

      - name: Update issue with test results
        if: always()
        env:
          ISSUE_NUMBER: ${{ github.event.inputs.issue_number }}
        run: |
          if [ "${{ steps.run-tests.outputs.test_passed }}" == "true" ] || [ "${{ steps.retry-tests.outputs.retry_passed }}" == "true" ]; then
            gh issue comment "${ISSUE_NUMBER}" --body "✅ **テスト完了**

            すべてのテストに成功しました！
            - ユニットテスト: ✅
            - 統合テスト: ✅
            - カバレッジ: ✅

            次のステップ: コードレビュー"
          else
            gh issue comment "${ISSUE_NUMBER}" --body "⚠️ **テストに問題があります**

            自動修正を試みましたが、一部のテストが失敗しています。
            詳細は [テストログ](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}) を確認してください。

            人間の介入が必要な可能性があります。"

            gh issue edit "${ISSUE_NUMBER}" --add-label "ai:test-failed"
          fi